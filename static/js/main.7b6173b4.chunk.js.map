{"version":3,"sources":["config.js","components/Localisation.js","components/messages/TextMessages/TextMessage.js","components/messages/TextMessages/IncomingTextMessage.js","components/Category.js","components/messages/LinkMessage.js","components/screens/ContactsScreen.js","components/factoids/FactoidGreed.js","components/factoids/Factoid.js","components/interactive/GridButtonLink.js","components/interactive/ButtonLink.js","components/screens/RoadmapScreen.js","components/interactive/MailInput.js","components/messages/TextMessages/OutcomingTextMessage.js","components/screens/EmailScreen.js","components/screens/HowItWorksScreen.js","components/interactive/Button.js","components/screens/IntroScreen.js","components/messages/VideoMessages/VideoMessage.js","components/messages/VideoMessages/IncomingVideoMessage.js","components/messages/PhotoMessages/PhotoMessage.js","components/messages/PhotoMessages/OutcomingPhotoMessage.js","components/usecases/DirtyHandsScreen.js","components/usecases/EyeCureScreen.js","components/usecases/MusicAdminScreen.js","components/usecases/BookReaderScreen.js","components/messages/GifMessages/GifMessage.js","components/messages/GifMessages/IncomingGifMessage.js","components/usecases/TakePhotoScreen.js","components/usecases/SmartGlassesScreen.js","components/usecases/StartingBuildScreen.js","components/usecases/TurnOffLightScreen.js","components/usecases/IFTTTIntegrationScreen.js","components/usecases/ShowingPresentationScreen.js","components/usecases/MonitorTicsScreen.js","components/usecases/MonitorProductivityScreen.js","components/usecases/MonitorStressScreen.js","components/usecases/MonitorMoodScreen.js","components/usecases/CountSmilesScreen.js","components/usecases/CountBitesAndSipsScreen.js","components/screens/UsecasesScrollingScreen.js","components/screens/AboutDeviceScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","version","name","strings","LocalizedStrings","en","manager","user","developer","buddy","app","button","page","phone","presentation","computer","smart_tv","light","list","intro__text__first","intro__text__second","intro__button","intro__en","intro__ru","about_device","about_device__first_text","about_device__second_text","grid_button__for_user","grid_button__for_developer","how_it_works__user__title","how_it_works__user__factoid__first","how_it_works__user__factoid__second","how_it_works__user__factoid__third","how_it_works__developer__title","how_it_works__developer__factoid__first","how_it_works__developer__factoid__second","how_it_works__developer__factoid__third","usecases__next","usecases__prev","dirty_hands__title","dirty_hands__subtitle","dirty_hands__manager","dirty_hands__user","dirty_hands__video_path","eye_cure__title","eye_cure__subtitle","eye_cure__app","eye_cure__user","eye_cure__video_path","music_admin__title","music_admin__subtitle","music_admin__buddy","music_admin__user","music_admin__video_path","book_reader__title","book_reader__subtitle","book_reader__page","book_reader__user","book_reader__video_path","take_photo__title","take_photo__subtitle","take_photo__phone","take_photo__user","smart_glasses__title","smart_glasses__subtitle","smart_glasses__list_first","smart_glasses__user","smart_glasses__list_second","ifttt_integration__title","ifttt_integration__subtitle","ifttt_integration__smart_tv","ifttt_integration__user","showing_presentation__title","showing_presentation__subtitle","showing_presentation__presentation","showing_presentation__user","starting_build__title","starting_build__subtitle","starting_build__computer","starting_build__user","turn_off_light__title","turn_off_light__subtitle","turn_off_light__light","turn_off_light__user","monitor_tics__title","monitor_tics__subtitle","monitor_tics__app","monitor_tics__user","monitor_stress__title","monitor_stress__subtitle","monitor_stress__app","monitor_stress__user","monitor_mood__title","monitor_mood__subtitle","monitor_mood__app","monitor_mood__user","monitor_productivity__title","monitor_productivity__subtitle","monitor_productivity__app","monitor_productivity__user","count_smiles__title","count_smiles__subtitle","count_smiles__app","count_smiles__user","count_bites__title","count_bites__subtitle","count_bites__app","count_bites__user","email_form__title","email_form__subtitle","email_form__developer","email_form__placeholder","email_form__button","email_form__success_toast","email_form__error_toast","email_form__user_sent","email_form__survey_dev__text","email_form__survey_dev__link","roadmap__title","roadmap_factoid__user__first","roadmap_factoid__user__second","roadmap_factoid__user__third","roadmap_factoid__developer__first","roadmap_factoid__developer__second","roadmap_factoid__developer__third","in_touch__title","in_touch__developer","in_touch__developer_last","in_touch__privacy","in_touch__privacy_link","ru","classNames","require","TextMessage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","class_name","message_content__incoming","props","is_incoming","message_content__outcoming","react_default","a","createElement","className","text","Component","IncomingTextMessage","sender","TextMessage_TextMessage","Category","category__padding","id","title","subtitle","children","LinkMessage","message__incoming","message__outcoming","last_thing","is_last","href","link","ContactsScreen","Category_Category","IncomingTextMessage_IncomingTextMessage","LinkMessage_LinkMessage","FactoidGreed","Factoid","number","src","path","description","GridButtonLink","ButtonLink","button_link__margin","margin","button_link__chosen","chosen","button_link__margin_left","margin_left","button_link__top13","top13","button_link__previous","is_previous","button_link__next","is_next","RoadmapScreen","_this","call","button_id__dev","idGenerator","button_id__user","roadmap_who","cookie","load","state","button_user","document","getElementById","button_dev","addEventListener","event","preventDefault","choseGuy","who","console","log","save","setState","GridButtonLink_GridButtonLink","ButtonLink_ButtonLink","FactoidGreed_FactoidGreed","Factoid_Factoid","MailInput","placeholder","type","OutcomingTextMessage","EmailScreen","buttonId","inputId","email_who","user_email__text","language","getLanguage","mail","replace","length","axios","get","then","response","handleResponse","catch","error","input","e","click","altKey","sendRequest","component","verifyComponent","OutcomingTextMessage_OutcomingTextMessage","MailInput_MailInput","onClick","handleKeyPress","HowItWorksScreen","howitworks_who","Button","IntroScreen","changeLanguage","button_id__en","button_id__ru","button_id__swipe","button__en","button__ru","button__swipe","swipeDown","checkUrlForSkipping","window","location","parameters","split","i","value_array","scroller","scrollTo","duration","delay","smooth","offset","lang","setLanguage","handle","Button_Button","fullpage","VideoMessage","frameBorder","allowFullScreen","IncomingVideoMessage","VideoMessage_VideoMessage","PhotoMessage","OutcomingPhotoMessage","PhotoMessage_PhotoMessage","DirtyHandsScreen","IncomingVideoMessage_IncomingVideoMessage","OutcomingPhotoMessage_OutcomingPhotoMessage","EyeCureScreen","MusicAdminScreen","BookReaderScreen","GifMessage","IncomingGifMessage","GifMessage_GifMessage","TakePhotoScreen","IncomingGifMessage_IncomingGifMessage","SmartGlassesScreen","StartingBuildScreen","TurnOffLightScreen","IFTTTIntegrationScreen","ShowingPresentationScreen","MonitorTicsScreen","MonitorProductivityScreen","MonitorStressScreen","MonitorMoodScreen","CountSmilesScreen","CountBitesAndSipsScreen","UsecasesScrollingScreen","local_index","count","index","button_id__previous","button_id__next","button_previous","button_next","context","is_current","renderingComponent","DirtyHandsScreen_DirtyHandsScreen","EyeCureScreen_EyeCureScreen","MonitorProductivityScreen_MonitorProductivityScreen","MonitorStressScreen_MonitorStressScreen","MusicAdminScreen_MusicAdminScreen","BookReaderScreen_BookReaderScreen","ShowingPresentationScreen_ShowingPresentationScreen","SmartGlassesScreen_SmartGlassesScreen","IFTTTIntegrationScreen_IFTTTIntegrationScreen","StartingBuildScreen_StartingBuildScreen","TurnOffLightScreen_TurnOffLightScreen","TakePhotoScreen_TakePhotoScreen","MonitorMoodScreen_MonitorMoodScreen","MonitorTicsScreen_MonitorTicsScreen","CountSmilesScreen_CountSmilesScreen","CountBitesAndSipsScreen_CountBitesAndSipsScreen","returnHealthSequence","returnControllingSequence","returnDefaultSequence","episodesSequence","AboutDeviceScreen","App","handleStateUpdate","bind","assertThisInitialized","IntroScreen_IntroScreen","AboutDeviceScreen_AboutDeviceScreen","HowItWorksScreen_HowItWorksScreen","UsecasesScrollingScreen_UsecasesScrollingScreen","EmailScreen_EmailScreen","RoadmapScreen_RoadmapScreen","ContactsScreen_ContactsScreen","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b6173b4.chunk.js","sourcesContent":["module.exports = {\n    \"version\": \"1.1.2\",\n    \"name\": \"Reface\"\n};","import LocalizedStrings from 'react-localization/lib/LocalizedStrings';\n\nlet strings = new LocalizedStrings({\n    en: {\n        manager: \"Project manager\",\n        user: \"User\",\n        developer: \"Developer\",\n        buddy: \"Buddy\",\n        app: \"Application\",\n        button: \"Button\",\n        page: \"Page\",\n        phone: \"Phone\",\n        presentation: \"Presentation\",\n        computer: \"Computer\",\n        smart_tv: \"Smart TV\",\n        light: \"Light\",\n        list: \"List\",\n\n        intro__text__first: \"Control your devices with eye movements,\",\n        intro__text__second: \"raising eyebrows and other face gestures\",\n\n        intro__button: \"I want to stay tuned\",\n        intro__en: \"EN\",\n        intro__ru: \"РУС\",\n\n        about_device: \"About device\",\n        about_device__first_text: \"Your brain generates some electric activity while functioning. Our neural network classifies 7 different actions of your face based on this activity: blinks, hard blinks, shaking a head, moving eyes upwards, leftwards, rightwards and downwards.\",\n        about_device__second_text: \"Our device itself will have the size of sports headphones and will be attached to two ears. Will send data via bluetooth. Today we have a prototype: an application which works with EEF-device of another manufacturer.\",\n\n        grid_button__for_user: \"For user\",\n        grid_button__for_developer: \"For developer\",\n\n        how_it_works__user__title: \"How does it work\",\n        how_it_works__user__factoid__first: \"You set some \\\"hot keys\\\" on gestures of your face in our companion app (for example, I blink 3 times - music stops)\",\n        how_it_works__user__factoid__second: \"You do sth, reface catches your brain signal and sends it to our companion app\",\n        how_it_works__user__factoid__third: \"App analyses the signal using neural network and does something (turnes off the music, f.e)\",\n\n        how_it_works__developer__title: \"How can I use it\",\n        how_it_works__developer__factoid__first: \"You read a documentation of our API (will be available)\",\n        how_it_works__developer__factoid__second: \"You use methods of API to somehow react on the events (blinks, hard blinks etc)\",\n        how_it_works__developer__factoid__third: \"You do something with this information. For example, you write a code which looks like: if (clicked) doaBarrelRoll().\",\n\n        usecases__next: \"Next usecase\",\n        usecases__prev: \"Previous usecase\",\n\n\n        dirty_hands__title: \"Cancel calls, open chats, send messages etc (needs integration)\",\n        dirty_hands__subtitle: \"Your hands are dirty\",\n        dirty_hands__manager: \"Calling...\",\n        dirty_hands__user: \"I'll message you in several minutes, wait a bit.\",\n        dirty_hands__video_path: \"https://www.youtube.com/embed/QJCE43zRfbg\",\n\n        eye_cure__title: \"Mention of the health state\",\n        eye_cure__subtitle: \"Your eyes are watering\",\n        eye_cure__app: \"Don't forget to use eye drops. Your eyes are tired.\",\n        eye_cure__user: \"Right, I should do it\",\n        eye_cure__video_path: \"https://www.youtube.com/embed/0szQHEQ7MXA\",\n\n        music_admin__title: \"Turn music on and off\",\n        music_admin__subtitle: \"Your hands are busy\",\n        music_admin__buddy: \"(mess) Ajodoskdfdjfi\",\n        music_admin__user: \"Oh, I should turn off the music\",\n        music_admin__video_path: \"https://www.youtube.com/embed/KcsvcFPbR_4\",\n\n        book_reader__title: \"Read without loss of concentration (needs integration)\",\n        book_reader__subtitle: \"You want to turn the page\",\n        book_reader__page: \"Ough, you've lost the concentration while turning me\",\n        book_reader__user: \"Now I blink - you turn\",\n        book_reader__video_path: \"https://www.youtube.com/embed/0yOBi5Ay6TE\",\n\n        take_photo__title: \"Take photos (needs integration)\",\n        take_photo__subtitle: \"You want to take photo\",\n        take_photo__phone: \"Hold me, it can fall down\",\n        take_photo__user: \"I hold you with al my fingers\",\n\n        smart_glasses__title: \"Controlling smart glasses (needs integration)\",\n        smart_glasses__subtitle: \"Need to scroll the list without hands\",\n        smart_glasses__list_first: \"Swipe me!\",\n        smart_glasses__user: \"I look to the bottom - you swipe to the bottom. Ok?\",\n        smart_glasses__list_second: \"Ok, boss!\",\n\n        ifttt_integration__title: \"Integration with IFTTT\",\n        ifttt_integration__subtitle: \"Integration with thousands of servies\",\n        ifttt_integration__smart_tv: \"Turn me on!\",\n        ifttt_integration__user: \"Turned you on\",\n\n        showing_presentation__title: \"Swiping slides of presentation\",\n        showing_presentation__subtitle: \"Need to show presentation\",\n        showing_presentation__presentation: \"Swipe me, but I need the public to say \\\"WOW\\\"\",\n        showing_presentation__user: \"- I swiped it with my eyes, did you see it?\",\n\n        starting_build__title: \"Control a computer\",\n        starting_build__subtitle: \"You sit in your chair really comfortably\",\n        starting_build__computer: \"Press \\\"OK\\\", I've opened a window for it\",\n        starting_build__user: \"Ok'ed with my eyes!\",\n\n        turn_off_light__title: \"Control your smart house\",\n        turn_off_light__subtitle: \"Don't want to clap\",\n        turn_off_light__light: \"Turn off the light, I am in the bathroom\",\n        turn_off_light__user: \"Yep, wait a minute\",\n\n        monitor_tics__title: \"Monitor nervous tics: for example, of your eyes\",\n        monitor_tics__subtitle: \"Tics - one of the symptoms of overtiredness\",\n        monitor_tics__app: \"Hi! Your eye twitches! I would recommend to relax and visit doctor!\",\n        monitor_tics__user: \"Thank you for your care <З\",\n\n        monitor_stress__title: \"Monitor your stress levels\",\n        monitor_stress__subtitle: \"Stress is dangerous for your neural system\",\n        monitor_stress__app: \"You are overtired, relax, our your productivity will significantly decrease\",\n        monitor_stress__user: \"Thank you, I feel myself a bit disorientated\",\n\n        monitor_mood__title: \"Monitor your mood\",\n        monitor_mood__subtitle: \"Mood is a key for your life perception\",\n        monitor_mood__app: \"You have brilliant mood! Cool that I recommended you not to call that clients\",\n        monitor_mood__user: \"Thank you, I am so happy!\",\n\n        monitor_productivity__title: \"Measure your productivity\",\n        monitor_productivity__subtitle: \"We will help you to work quicker\",\n        monitor_productivity__app: \"You are staying unfocused for an hour, do not divert\",\n        monitor_productivity__user: \"Indeed, these TV series are distracting\",\n\n        count_smiles__title: \"Count the number of smiles per day\",\n        count_smiles__subtitle: \"Therapy against depression\",\n        count_smiles__app: \"Hi! I am an app for therapy! If something happens - my data will help your doctor. I will remind you to smile more!\",\n        count_smiles__user: \":)\",\n\n        count_bites__title: \"Count the number of bites and sips a day\",\n        count_bites__subtitle: \"Stay healthy without overeating\",\n        count_bites__app: \"Hey, drink more water!\",\n        count_bites__user: \"Let's raise a glass to this app!\",\n\n\n        email_form__title: \"Keeping in touch with us\",\n        email_form__subtitle: \"Stay tuned\",\n        email_form__developer: \"Enter your email to get information about our project and the ability to buy the device in the future\",\n        email_form__placeholder: \"Email\",\n        email_form__button: \"Send\",\n        email_form__success_toast: \"Your email was sent, thank you!\",\n        email_form__error_toast: \"An error has happened, try to send later.\",\n        email_form__user_sent: \"Yep, here is my email: \",\n        email_form__survey_dev__text: \"Please take part in a survey, it'll take 1 minute approximately. You will help us to know more about our audience :) Here is the link.\",\n        email_form__survey_dev__link: \"https://vk.cc/9ivShk\",\n\n        roadmap__title: \"Roadmap\",\n        roadmap_factoid__user__first: \"An app which works with device of other manufacturer (we're here)\",\n        roadmap_factoid__user__second: \"Working prototype of the device\",\n        roadmap_factoid__user__third: \"First sales\",\n\n        roadmap_factoid__developer__first: \"First sales\",\n        roadmap_factoid__developer__second: \"Documentation for API, examples of usage in apps (which are demonstrated in usecases above)\",\n        roadmap_factoid__developer__third: \"Low-level API documentation for those who want to experiment\",\n\n        in_touch__title: \"Contact me\",\n        in_touch__developer: \"Mail me if you have ideas or questions :)\",\n        in_touch__developer_last: \"Subscribe on social networks of the project to get our news.\",\n        in_touch__privacy: \"Here is our privacy policy:\",\n        in_touch__privacy_link: \"https://vk.cc/9ruW5H\"\n    },\n\n    ru: {\n        manager: \"Менеджер проекта\",\n        user: \"Пользователь\",\n        developer: \"Разработчик\",\n        buddy: \"Приятель\",\n        app: \"Приложение\",\n        button: \"Кнопка\",\n        page: \"Страница\",\n        phone: \"Телефон\",\n        presentation: \"Презентация\",\n        computer: \"Компьютер\",\n        smart_tv: \"Умный телевизор\",\n        light: \"Свет\",\n        list: \"Список\",\n\n        intro__text__first: \"Управляй девайсами движением глаз,\",\n        intro__text__second: \"подниманием бровей и другими движениями лица\",\n\n        intro__button: \"Хочу быть в курсе\",\n        intro__en: \"EN\",\n        intro__ru: \"РУС\",\n\n        about_device: \"Об устройстве\",\n        about_device__first_text: \"Ваш мозг генерирует электрические импульсы. Нейросеть по этой электрической активности вашего мозга различает 7 различных жестов: мограние, сильное моргание, мотание головой влево-вправо, движение глаз вверх, влево, вправо и вниз.\",\n        about_device__second_text: \"Девайс будет размером со спортивные наушники и будет крепиться на два уха. Передача данных через bluetooth. На сегодня есть прототип: приложение, работающее с ЭЭГ-девайсом другой фирмы.\",\n\n        grid_button__for_user: \"Для пользователя\",\n        grid_button__for_developer: \"Для разработчика\",\n\n        how_it_works__user__title: \"Как это работает\",\n        how_it_works__user__factoid__first: \"Вы привязываете движения к действиям в нашем приложении (например, моргнул 3 раза - музыка выключилась)\",\n        how_it_works__user__factoid__second: \"Вы моргаете 3 раза (или делаете что-то еще), сигнал мозга обрабатывается устройством reface и передается в приложение\",\n        how_it_works__user__factoid__third: \"Приложение обрабатывает сигнал и выполняет предустановленную команду\",\n\n        how_it_works__developer__title: \"Как мне это использовать\",\n        how_it_works__developer__factoid__first: \"Вы читаете документацию о API нашей штуковины (будет доступна)\",\n        how_it_works__developer__factoid__second: \"Вы используете методы API, чтобы реагировать на события от нашего устройства\",\n        how_it_works__developer__factoid__third: \"Что-то делаете с этой информацией. Например, пишете код вроде if (clicked) doaBarrelRoll().\",\n\n        usecases__next: \"Следующий случай\",\n        usecases__prev: \"Предыдущий случай\",\n\n\n        dirty_hands__title: \"Открытие чата, браузера, отклонение звонков (нужна интеграция)\",\n        dirty_hands__subtitle: \"У вас грязные руки\",\n        dirty_hands__manager: \"Привет! Нужно срочно созвониться по проекту. Презентация через 10 минут, а файл почему-то ломанный.\",\n        dirty_hands__user: \"Позвоню через несколько минут.\",\n        dirty_hands__video_path: \"https://www.youtube.com/embed/QJCE43zRfbg\",\n\n        eye_cure__title: \"Напоминание о регулярности лечения\",\n        eye_cure__subtitle: \"У вас слезятся глаза\",\n        eye_cure__app: \"Не забудь закапать глазные капли. Кажется, твои глаза устали.\",\n        eye_cure__user: \"Точно, нужно срочно закапать\",\n        eye_cure__video_path: \"https://www.youtube.com/embed/0szQHEQ7MXA\",\n\n\n        music_admin__title: \"Включение и выключение музыки\",\n        music_admin__subtitle: \"У вас заняты руки\",\n        music_admin__buddy: \"(неразборчиво) Ааоольывораьвоа\",\n        music_admin__user: \"Надо выключить музыку\",\n        music_admin__video_path: \"https://www.youtube.com/embed/KcsvcFPbR_4\",\n\n        book_reader__title: \"Читайте, не отвлекаясь (нужна интеграция)\",\n        book_reader__subtitle: \"Надо перелистнуть страничку\",\n        book_reader__page: \"Оуф, ты потерял нить сюжета, пока меня перелистывал\",\n        book_reader__user: \"Перелистнись, когда я моргну\",\n        book_reader__video_path: \"https://www.youtube.com/embed/0yOBi5Ay6TE\",\n\n        take_photo__title: \"Делайте фото (нужна интеграция)\",\n        take_photo__subtitle: \"Вам нужно сделать фото\",\n        take_photo__phone: \"Держи меня, я могу упасть!\",\n        take_photo__user: \"Держу тебя всеми пальцами :)\",\n\n        smart_glasses__title: \"Управление умными очками (нужна интеграция)\",\n        smart_glasses__subtitle: \"Скроллить список, не поднося руку к виску\",\n        smart_glasses__list_first: \"Промотай меня!\",\n        smart_glasses__user: \"Посмотрю вниз - ты пролистайся вниз. Хорошо?\",\n        smart_glasses__list_second: \"Понял, сейчас сделаю!\",\n\n        ifttt_integration__title: \"Интеграция с IFTTT\",\n        ifttt_integration__subtitle: \"Взаимодействие с тысячами сервисов\",\n        ifttt_integration__smart_tv: \"Включи меня!\",\n        ifttt_integration__user: \"Включил\",\n\n        showing_presentation__title: \"Перелистывание слайдов презентации\",\n        showing_presentation__subtitle: \"Надо произвести впечатление\",\n        showing_presentation__presentation: \"Перелистни меня, но так, чтобы публика сказала \\\"ВАУ\\\"\",\n        showing_presentation__user: \"- Я перелистнул эту презентацию взглядом, вы видели это?\",\n\n        starting_build__title: \"Управление компьютером\",\n        starting_build__subtitle: \"Вы удобно сидите в кресле\",\n        starting_build__computer: \"Нажми \\\"OK\\\", я тебе окошко для этого показал\",\n        starting_build__user: \"Окнул глазами\",\n\n        turn_off_light__title: \"Управляйте умным домом\",\n        turn_off_light__subtitle: \"Не хочется хлопать руками\",\n        turn_off_light__light: \"Выключи меня, я горю в ванной\",\n        turn_off_light__user: \"Да, сейчас тебя выключу\",\n\n        monitor_tics__title: \"Отслеживайте тики: глазные, например\",\n        monitor_tics__subtitle: \"Тики - один из симптомов переутомления\",\n        monitor_tics__app: \"Привет! У тебя глаз дергается! Советую отдохнуть или сходить к врачу!\",\n        monitor_tics__user: \"Спасибо, что заботишься <З\",\n\n        monitor_stress__title: \"Отслеживайте уровень стресса\",\n        monitor_stress__subtitle: \"Стресс опасен для нервной системы\",\n        monitor_stress__app: \"У тебя переутомление, отдохни, иначе твоя продуктивность сильно упадет\",\n        monitor_stress__user: \"Спасибо, я чувствую, что мне уже плоховато\",\n\n        monitor_mood__title: \"Следите за своим настроением\",\n        monitor_mood__subtitle: \"Настроение изменяет ваше отношение к жизни\",\n        monitor_mood__app: \"У тебя такое хорошее настроение! Как хорошо, что в прошлый раз я сказал тебе не звонить тем клиентам\",\n        monitor_mood__user: \"Спасибо, я так счастлив!\",\n\n        monitor_productivity__title: \"Измеряйте свою продуктивность\",\n        monitor_productivity__subtitle: \"Поможем вам выполнять работу быстрее\",\n        monitor_productivity__app: \"Ты не можешь сконцентрироваться на работе уже полчаса, не отвлекайся\",\n        monitor_productivity__user: \"Да, видимо, этот сериал меня действительно отвлекает\",\n\n        count_smiles__title: \"Считайте количество улыбок в день\",\n        count_smiles__subtitle: \"Терапия против депрессии\",\n        count_smiles__app: \"Привет! Я - приложение для терапии! Если вдруг что - то мои данные помогут психологу. Кроме того, я постараюсь говорить тебе улыбаться больше!\",\n        count_smiles__user: \":)\",\n\n        count_bites__title: \"Считайте количество глотков и укусов в день\",\n        count_bites__subtitle: \"Оставайтесь здоровым и не переедайте\",\n        count_bites__app: \"Эй, попей водички!\",\n        count_bites__user: \"Поднимаю за тебя свой бокал!\",\n\n\n        email_form__title: \"Форма для электронной почты\",\n        email_form__subtitle: \"Хотите быть в курсе?\",\n        email_form__developer: \"Введите ваш email, чтобы получать информацию о развитии проекта и первым узнать, когда можно будет купить продукт.\",\n        email_form__placeholder: \"Емейл\",\n        email_form__button: \"Отправить\",\n        email_form__success_toast: \"Все отправилось, спасибо!\",\n        email_form__error_toast: \"Произошла ошибка, повторите позже.\",\n        email_form__user_sent: \"Привет, вот моя почта.\",\n        email_form__survey_dev__text: \"Пройдите, пожалуйста, соцопрос. Он рассчитан примерно на минуту. Очень поможете нам лучше понять целевую аудиторию :) Вот ссылка.\",\n        email_form__survey_dev__link: \"https://vk.cc/9ivUAP\",\n\n        roadmap__title: \"План развития\",\n        roadmap_factoid__user__first: \"Приложение, работающее с устройством другой фирмы (текущая стадия)\",\n        roadmap_factoid__user__second: \"Рабочий прототип устройства\",\n        roadmap_factoid__user__third: \"Первые продажи устройства\",\n\n        roadmap_factoid__developer__first: \"Первые продажи устройства\",\n        roadmap_factoid__developer__second: \"Документация к API, примеры использования в приложениях (которые показаны выше к юзкейсах)\",\n        roadmap_factoid__developer__third: \"Более низкоуровневая документация для желающих поэкспериментировать\",\n\n        in_touch__title: \"Есть вопросы?\",\n        in_touch__developer: \"Пишите, если у вас есть предложения, вопросы, или просто хочется поговорить.\",\n        in_touch__developer_last: \"Подпишитесь на социальные сети проекта, чтобы следить за новостями.\",\n        in_touch__privacy: \"Вот наша политика конфиденциальности:\",\n        in_touch__privacy_link: \"https://vk.cc/9rssHl\"\n    }\n});\n\nexport default strings;","import React, { Component} from 'react';\nlet classNames = require('classnames');\n\nexport class TextMessage extends Component {\n    render() {\n        let class_name = classNames('message_text', {\n            'message_content__incoming': this.props.is_incoming,\n            'message_content__outcoming': !this.props.is_incoming\n        });\n\n        return (\n            <div className={class_name}>\n                {this.props.text}\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport { TextMessage } from './TextMessage';\n\nexport class IncomingTextMessage extends Component {\n    render() {\n\n        return (\n            <div className=\"message__incoming message\">\n                {\n                    this.props.sender?\n                        <div className=\"message__sender\">\n                            {this.props.sender}\n                        </div>\n                        :\n                        <div></div>\n                }\n\n                <TextMessage\n                    is_incoming={true}\n                    text={this.props.text} />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nlet classNames = require('classnames');\n\nexport class Category extends Component {\n    render() {\n        let class_name = classNames('category', {\n                'category__padding': this.props.category__padding,\n            }\n        );\n\n        return (\n            <div className={class_name} id={this.props.id}>\n                <div className=\"category__title\">\n                    {this.props.title}\n                </div>\n                <div className=\"category__subtitle\">\n                    {this.props.subtitle}\n                </div>\n                <div className=\"category_content\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nlet classNames = require('classnames');\n\nexport class LinkMessage extends Component {\n    render() {\n        let class_name = classNames('message_text message', {\n            'message__incoming': this.props.is_incoming,\n            'message_content__incoming': this.props.is_incoming,\n            'message__outcoming': !this.props.is_incoming,\n            'message_content__outcoming': !this.props.is_incoming,\n            'last_thing': this.props.is_last\n        });\n\n        return (\n            <div className={class_name}>\n                <div><a className=\"message_link\" href={this.props.link}>{this.props.text}</a></div>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {LinkMessage} from \"../messages/LinkMessage\";\n\nexport class ContactsScreen extends Component {\n    render() {\n        return (\n            <Category\n                category__padding={true}\n                title={strings.in_touch__title}>\n\n                <IncomingTextMessage\n                    text={strings.in_touch__developer}\n                    sender={strings.developer} />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://t.me/mixedenn\"\n                    link=\"https://t.me/mixedenn\" />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://facebook.me/mixedenn\"\n                    link=\"https://facebook.me/mixedenn\" />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://vk.me/mixeden\"\n                    link=\"https://vk.me/mixeden\" />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"mixedenn@gmail.com\"\n                    link=\"mailto:mixedenn@gmail.com\" />\n\n                <IncomingTextMessage\n                    text={strings.in_touch__developer_last} />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://vk.com/reface_tech\"\n                    link=\"https://vk.com/reface_tech\" />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://fb.com/refacetech\"\n                    link=\"https://fb.com/refacetech\" />\n\n                <LinkMessage\n                    is_incoming={true}\n                    text=\"https://t.me/reface_tech\"\n                    link=\"https://t.me/reface_tech\" />\n\n                <IncomingTextMessage\n                    text={strings.in_touch__privacy} />\n\n                <LinkMessage\n                    is_last={true}\n                    is_incoming={true}\n                    text={strings.in_touch__privacy_link}\n                    link={strings.in_touch__privacy_link} />\n\n            </Category>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class FactoidGreed extends Component {\n    render() {\n        return (\n            <div className=\"factoid_greed\">\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class Factoid extends Component {\n    render() {\n        return (\n            <div className=\"factoid\">\n                <div className=\"factoid__number\">\n                    {this.props.number}\n                </div>\n\n                <img className=\"factoid__picture\" src={\"/images/\" + this.props.path}/>\n                \n                <div className=\"factoid__description\">\n                    {this.props.description}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class GridButtonLink extends Component {\n\n    render() {\n        return (\n            <div className=\"button_link__grid\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nlet classNames = require('classnames');\n\nexport class ButtonLink extends Component {\n\n    render() {\n        let class_name = classNames('button_link', {\n                'button_link__margin': this.props.margin,\n                'button_link__chosen': this.props.chosen,\n                'button_link__margin_left': this.props.margin_left,\n                'button_link__top13': this.props.top13,\n                'button_link__previous': this.props.is_previous,\n                'button_link__next': this.props.is_next,\n            }\n        );\n\n        return (\n            <div className={class_name} id={this.props.id}>\n                {this.props.text}\n            </div>\n        );\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { Category } from '../Category';\nimport {FactoidGreed} from \"../factoids/FactoidGreed\";\nimport {Factoid} from \"../factoids/Factoid\";\nimport {GridButtonLink} from \"../interactive/GridButtonLink\";\nimport {ButtonLink} from \"../interactive/ButtonLink\";\nimport idGenerator from \"react-id-generator\";\nimport cookie from 'react-cookies'\n\nexport class RoadmapScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.button_id__dev = idGenerator();\n        this.button_id__user = idGenerator();\n\n        let roadmap_who = cookie.load(\"roadmap_who\");\n\n        this.state = { chosen: roadmap_who? roadmap_who : \"user\" };\n    }\n\n    componentDidMount() {\n        let button_user =  document.getElementById(this.button_id__user);\n        let button_dev =  document.getElementById(this.button_id__dev);\n        let link = this;\n\n        button_user.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.choseGuy(\"user\");\n        });\n\n        button_dev.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.choseGuy(\"dev\");\n        });\n    }\n\n    choseGuy(who) {\n        console.log(who);\n        cookie.save(\"roadmap_who\", who);\n        this.setState({chosen: who});\n    }\n\n    render() {\n        return (\n            <Category\n                category__padding={true}\n                title={strings.roadmap__title}>\n\n                <GridButtonLink>\n                    <ButtonLink\n                        margin={true}\n                        chosen={this.state.chosen === \"user\"}\n                        id={this.button_id__user}\n                        text={strings.grid_button__for_user}/>\n\n                    <ButtonLink\n                        margin={true}\n                        chosen={this.state.chosen === \"dev\"}\n                        id={this.button_id__dev}\n                        text={strings.grid_button__for_developer} />\n\n                </GridButtonLink>\n\n                {\n                    this.state.chosen === \"user\"?\n                        <FactoidGreed>\n                            <Factoid\n                                number={\"1\"}\n                                description={strings.roadmap_factoid__user__first}\n                                path={\"binary.svg\"}/>\n\n                            <Factoid\n                                number={\"2\"}\n                                description={strings.roadmap_factoid__user__second}\n                                path={\"ear.svg\"}/>\n\n                            <Factoid\n                                number={\"3\"}\n                                description={strings.roadmap_factoid__user__third}\n                                path={\"dollar.svg\"}/>\n\n                        </FactoidGreed>\n                        :\n                        <FactoidGreed>\n                            <Factoid\n                                number={\"1\"}\n                                description={strings.roadmap_factoid__developer__first}\n                                path={\"binary.svg\"}/>\n\n                            <Factoid\n                                number={\"2\"}\n                                description={strings.roadmap_factoid__developer__second}\n                                path={\"ear.svg\"}/>\n\n                            <Factoid\n                                number={\"3\"}\n                                description={strings.roadmap_factoid__developer__third}\n                                path={\"dollar.svg\"}/>\n\n                        </FactoidGreed>\n                }\n            </Category>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class MailInput extends Component {\n    render() {\n        return (\n            <div>\n                <form>\n                    <input id={this.props.id} placeholder={this.props.placeholder} type=\"text\"/>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport { TextMessage } from './TextMessage';\n\nexport class OutcomingTextMessage extends Component {\n    render() {\n\n        return (\n            <div className=\"message__outcoming message\">\n                {\n                    this.props.sender?\n                        <div className=\"message__sender\">\n                            {this.props.sender}\n                        </div>\n                        :\n                        <div></div>\n                }\n\n\n                <TextMessage\n                    is_incoming={false}\n                    text={this.props.text} />\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport {MailInput} from \"../interactive/MailInput\";\nimport {Category} from \"../Category\";\nimport strings from \"../Localisation\";\nimport {IncomingTextMessage} from \"../messages/TextMessages/IncomingTextMessage\";\nimport idGenerator from 'react-id-generator';\nimport axios from 'axios';\nimport {ButtonLink} from \"../interactive/ButtonLink\";\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport cookie from 'react-cookies'\nimport {LinkMessage} from \"../messages/LinkMessage\";\nimport {version} from \"../../config\"\n\nexport class EmailScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonId = idGenerator();\n        this.inputId = idGenerator();\n\n        let email_who = cookie.load(\"email_who\");\n\n        this.state = {\n            user_email__text: email_who? email_who : \"\"\n        }\n    }\n\n    sendRequest(event, link) {\n        const language = strings.getLanguage();\n        const mail = document.getElementById(link.inputId).value.replace(\"\\ \\g\", \"\");\n\n        if (mail.length > 0 && language.length > 0) {\n            axios.get(\"https://maker.ifttt.com/trigger/email_sent/with/key/dZ2N1BVOi6c5zCIOD27V9Q?value1=\" + mail  + \"&value2=\" + language + \"&value3=\" + version)\n                .then(function (response) {\n                    link.handleResponse(mail);\n                })\n                .catch(function (error) {\n                    link.handleResponse(mail);\n                    console.log(error);\n                });\n        }\n    }\n\n    handleResponse(mail) {\n        cookie.save(\"email_who\",  mail);\n\n        this.setState({\n            user_email__text: mail\n        });\n    }\n\n    componentDidMount() {\n        let button = document.getElementById(this.buttonId);\n        let input = document.getElementById(this.inputId);\n\n        const link = this;\n\n        input.addEventListener('submit', function(e) {\n            console.log(e);\n            e.preventDefault();\n            button.click();\n        });\n\n        input.addEventListener('keypress', function (e) {\n            let key = e.key || e.altKey;\n            console.log(key);\n\n            if (key === 'Enter') {\n                e.preventDefault();\n                button.click();\n            }\n        });\n\n        button.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.sendRequest(event, link);\n        });\n    }\n\n    handleKeyPress(event) {\n        event.preventDefault();\n        document.getElementById(this.buttonId).click();\n    }\n\n    verifyComponent(component) {\n        return this.state.user_email__text.length > 0? component : <div></div>;\n    }\n\n    render() {\n        return (\n            <Category\n                category__padding={true}\n                id=\"category__email\"\n                title={strings.email_form__title}\n                subtitle={strings.email_form__subtitle}>\n\n                <IncomingTextMessage\n                    sender={strings.developer}\n                    text={strings.email_form__developer} />\n\n                {\n                    this.verifyComponent(\n                        <OutcomingTextMessage\n                            sender={strings.user}\n                            text={strings.email_form__user_sent} />\n                    )\n                }\n\n                {\n                    this.verifyComponent(\n                        <LinkMessage\n                            is_incoming={false}\n                            text={this.state.user_email__text}\n                            link={\"mailto:\" + this.state.user_email__text} />\n                    )\n                }\n\n                {\n                    this.verifyComponent(\n                        <IncomingTextMessage\n                            text={strings.email_form__success_toast} />\n                    )\n                }\n\n                {\n                    this.verifyComponent(\n                        <IncomingTextMessage\n                            text={strings.email_form__survey_dev__text} />\n                    )\n                }\n\n                {\n                    this.verifyComponent(\n                        <LinkMessage\n                            is_incoming={true}\n                            text={strings.email_form__survey_dev__link}\n                            link={strings.email_form__survey_dev__link} />\n                    )\n                }\n\n                <div className=\"email_form\">\n                    <MailInput placeholder={strings.email_form__placeholder} onClick={this.handleKeyPress} id={this.inputId} />\n                    <ButtonLink text={strings.email_form__button} onClick={this.handleKeyPress} id={this.buttonId} />\n                </div>\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { Category } from '../Category';\nimport {FactoidGreed} from \"../factoids/FactoidGreed\";\nimport {Factoid} from \"../factoids/Factoid\";\nimport {ButtonLink} from \"../interactive/ButtonLink\";\nimport {GridButtonLink} from \"../interactive/GridButtonLink\";\nimport idGenerator from \"react-id-generator\";\nimport cookie from 'react-cookies'\n\nexport class HowItWorksScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.button_id__dev = idGenerator();\n        this.button_id__user = idGenerator();\n\n        let howitworks_who = cookie.load(\"howitworks_who\");\n\n        this.state = { chosen: howitworks_who? howitworks_who : \"user\" };\n    }\n\n    componentDidMount() {\n        let button_user =  document.getElementById(this.button_id__user);\n        let button_dev =  document.getElementById(this.button_id__dev);\n        let link = this;\n\n        button_user.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.choseGuy(\"user\");\n        });\n\n        button_dev.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.choseGuy(\"dev\");\n        });\n    }\n\n    choseGuy(who) {\n        console.log(who);\n        cookie.save(\"howitworks_who\", who);\n        this.setState({chosen: who});\n    }\n\n    render() {\n        return (\n            <Category\n                category__padding={true}\n                title={strings.how_it_works__user__title}>\n\n                <GridButtonLink>\n                    <ButtonLink\n                        margin={true}\n                        chosen={this.state.chosen === \"user\"}\n                        id={this.button_id__user}\n                        text={strings.grid_button__for_user}/>\n\n                    <ButtonLink\n                        margin={true}\n                        chosen={this.state.chosen === \"dev\"}\n                        id={this.button_id__dev}\n                        text={strings.grid_button__for_developer} />\n\n                </GridButtonLink>\n\n                {\n                    this.state.chosen === \"user\"?\n                        <FactoidGreed>\n                            <Factoid\n                                number={\"1\"}\n                                description={strings.how_it_works__user__factoid__first}\n                                path={\"brain.svg\"}/>\n\n                            <Factoid\n                                number={\"2\"}\n                                description={strings.how_it_works__user__factoid__second}\n                                path={\"ear.svg\"}/>\n\n                            <Factoid\n                                number={\"3\"}\n                                description={strings.how_it_works__user__factoid__third}\n                                path={\"wave.svg\"}/>\n\n                        </FactoidGreed>\n                    :\n                        <FactoidGreed>\n                            <Factoid\n                                number={\"1\"}\n                                description={strings.how_it_works__developer__factoid__first}\n                                path={\"brain.svg\"}/>\n\n                            <Factoid\n                                number={\"2\"}\n                                description={strings.how_it_works__developer__factoid__second}\n                                path={\"ear.svg\"}/>\n\n                            <Factoid\n                                number={\"3\"}\n                                description={strings.how_it_works__developer__factoid__third}\n                                path={\"wave.svg\"}/>\n\n                        </FactoidGreed>\n\n                }\n\n            </Category>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class Button extends Component {\n\n    render() {\n        return (\n            <div className=\"button\" id={this.props.id}>\n                {this.props.text}\n            </div>\n        );\n    }\n}","import React, { Component} from 'react';\nimport { ButtonLink } from '../interactive/ButtonLink';\nimport strings from '../Localisation';\nimport idGenerator from 'react-id-generator';\nimport cookie from 'react-cookies'\nimport { scroller } from 'react-scroll'\nimport {Button} from \"../interactive/Button\";\n\nexport class IntroScreen extends Component {\n    constructor(props) {\n        super(props);\n        let language = cookie.load(\"language\");\n        language = language != null? language : \"ru\";\n\n        this.state = {language: language};\n        this.changeLanguage({}, language);\n\n        this.button_id__en = idGenerator();\n        this.button_id__ru = idGenerator();\n        this.button_id__swipe = idGenerator();\n    }\n\n    componentDidMount() {\n        let button__en = document.getElementById(this.button_id__en);\n        let button__ru = document.getElementById(this.button_id__ru);\n        let button__swipe = document.getElementById(this.button_id__swipe);\n        let link = this;\n\n        button__en.addEventListener(\"click\", function(event) {\n            link.changeLanguage(event, \"en\");\n        });\n\n        button__ru.addEventListener(\"click\", function(event) {\n            link.changeLanguage(event, \"ru\");\n        });\n\n        button__swipe.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            link.swipeDown();\n        });\n\n        this.checkUrlForSkipping(button__swipe);\n    }\n\n    checkUrlForSkipping(button__swipe) {\n        let link = window.location.href;\n        let parameters = link.split(\"?\");\n        console.log(parameters);\n        console.log(link);\n\n        if (parameters.length > 1) {\n            parameters = parameters[1].split(\"&\");\n            let type = \"\";\n\n            for (let i = 0; i < parameters.length; i++) {\n                let parameter = parameters[i];\n                let value_array = parameter.split(\"=\");\n\n                if (value_array[0] === 'skip') {\n                    type = value_array[1];\n                }\n\n                break;\n            }\n\n            console.log(type);\n\n            if (type == \"true\") {\n                button__swipe.click();\n            }\n        }\n    }\n\n    swipeDown(){\n        scroller.scrollTo('category__email', {\n            duration: 1500,\n            delay: 100,\n            smooth: true,\n            offset: 50\n        })\n    }\n\n    changeLanguage(e, lang) {\n        try {\n            e.preventDefault();\n        }\n\n        catch (e) {\n            console.log(e);\n        }\n\n        strings.setLanguage(lang);\n\n        console.log(strings.getLanguage());\n        this.setState({language: strings.getLanguage()});\n        cookie.save(\"language\", strings.getLanguage());\n        this.props.handle();\n    }\n\n    render() {\n        return (\n            <div className=\"intro category\">\n                <div className=\"intro__logo_langs\">\n                    <img className=\"intro__logo\" src=\"/images/logonew.svg\"/>\n\n                    <div className=\"intro__langs_switch\">\n                        <ButtonLink\n                            margin={true}\n                            chosen={this.state.language === \"en\"}\n                            text={strings.intro__en}\n                            id={this.button_id__en}/>\n\n                        <ButtonLink\n                            margin={true}\n                            chosen={this.state.language === \"ru\"}\n                            text={strings.intro__ru}\n                            id={this.button_id__ru}/>\n                    </div>\n                </div>\n\n                <div className=\"intro__central\">\n                    <div className=\"intro_base__central\">\n                        <img className=\"intro__image\" src=\"/images/eye.svg\"/>\n\n                        <div className=\"intro__text__first\">\n                            {strings.intro__text__first}\n                        </div>\n                        <div className=\"intro__text__second\">\n                            {strings.intro__text__second}\n                        </div>\n\n                        <Button\n                            fullpage={true}\n                            text={strings.intro__button}\n                            id={this.button_id__swipe}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nlet classNames = require('classnames');\n\nexport class VideoMessage extends Component {\n\n    render() {\n        let class_name = classNames('message_video', {\n            'message_content__incoming': this.props.is_incoming,\n            'message_content__outcoming': !this.props.is_incoming\n        });\n\n        return (\n            <iframe className={class_name} src={this.props.path} frameBorder=\"0\" allowFullScreen />\n        );\n    }\n}","import React, { Component } from 'react';\nimport {VideoMessage} from \"./VideoMessage\";\n\nexport class IncomingVideoMessage extends Component {\n\n    render() {\n        return (\n            <div className=\"message__incoming message\">\n                {\n                    this.props.sender?\n                        <div className=\"message__sender\">\n                            {this.props.sender}\n                        </div>\n                        :\n                        <div></div>\n                }\n\n\n                <VideoMessage\n                    is_incoming={true}\n                    path={this.props.path}/>\n            </div>\n        );\n    }\n}","import React, { Component} from 'react';\nlet classNames = require('classnames');\n\nexport class PhotoMessage extends Component {\n    render() {\n        let class_name = classNames('message_image', {\n            'message_content__incoming': this.props.is_incoming,\n            'message_content__outcoming': !this.props.is_incoming\n        });\n\n        return (\n            <img className={class_name} src={this.props.path} />\n        )\n    }\n}","import React, { Component } from 'react';\nimport { PhotoMessage } from './PhotoMessage';\n\nexport class OutcomingPhotoMessage extends Component {\n    render() {\n        return (\n            <div className=\"message__outcoming message\">\n                {\n                    this.props.sender?\n                        <div className=\"message__sender\">\n                            {this.props.sender}\n                        </div>\n                        :\n                        <div></div>\n                }\n\n                <PhotoMessage\n                    is_incoming={false}\n                    path={this.props.path}/>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingVideoMessage} from \"../messages/VideoMessages/IncomingVideoMessage\";\nimport {OutcomingPhotoMessage} from \"../messages/PhotoMessages/OutcomingPhotoMessage\";\n\nexport class DirtyHandsScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.dirty_hands__title}\n                subtitle={strings.dirty_hands__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.dirty_hands__manager}\n                    sender={strings.manager} />\n\n                <OutcomingTextMessage\n                    text={strings.dirty_hands__user}\n                    sender={strings.user}/>\n\n                <IncomingVideoMessage\n                    path={strings.dirty_hands__video_path}/>\n\n                <OutcomingPhotoMessage path=\"/images/pizza.svg\" />\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingVideoMessage} from \"../messages/VideoMessages/IncomingVideoMessage\";\n\nexport class EyeCureScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.eye_cure__title}\n                subtitle={strings.eye_cure__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.eye_cure__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.eye_cure__user}\n                    sender={strings.user}/>\n\n                <IncomingVideoMessage\n                    path={strings.eye_cure__video_path}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingVideoMessage} from \"../messages/VideoMessages/IncomingVideoMessage\";\nimport {OutcomingPhotoMessage} from \"../messages/PhotoMessages/OutcomingPhotoMessage\";\n\nexport class MusicAdminScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.music_admin__title}\n                subtitle={strings.music_admin__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.music_admin__buddy}\n                    sender={strings.buddy} />\n\n                <OutcomingTextMessage\n                    text={strings.music_admin__user}\n                    sender={strings.user}/>\n\n                <IncomingVideoMessage\n                    path={strings.music_admin__video_path}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingVideoMessage} from \"../messages/VideoMessages/IncomingVideoMessage\";\n\nexport class BookReaderScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.book_reader__title}\n                subtitle={strings.book_reader__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.book_reader__page}\n                    sender={strings.page} />\n\n                <OutcomingTextMessage\n                    text={strings.book_reader__user}\n                    sender={strings.user}/>\n\n                <IncomingVideoMessage\n                    path={strings.book_reader__video_path}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nlet classNames = require('classnames');\n\nexport class GifMessage extends Component {\n    render() {\n        let class_name = classNames('message_gif', {\n            'message_content__incoming': this.props.is_incoming,\n            'message_content__outcoming': !this.props.is_incoming\n        });\n\n        return (\n            <img className={class_name} src={this.props.path} />\n        )\n    }\n}","import React, { Component} from 'react';\nimport { GifMessage} from './GifMessage';\n\nexport class IncomingGifMessage extends Component {\n    render() {\n        return (\n            <div className=\"message__incoming message\">\n                {\n                    this.props.sender?\n                        <div className=\"message__sender\">\n                            {this.props.sender}\n                        </div>\n                        :\n                        <div></div>\n                }\n\n                <GifMessage\n                    is_incoming={true}\n                    path={this.props.path} />\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class TakePhotoScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.take_photo__title}\n                subtitle={strings.take_photo__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.take_photo__phone}\n                    sender={strings.phone} />\n\n                <OutcomingTextMessage\n                    text={strings.take_photo__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/take_photos.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class SmartGlassesScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.smart_glasses__title}\n                subtitle={strings.smart_glasses__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.smart_glasses__list_first}\n                    sender={strings.list} />\n\n                <OutcomingTextMessage\n                    text={strings.smart_glasses__user}\n                    sender={strings.user}/>\n\n                <IncomingTextMessage\n                    text={strings.smart_glasses__list_second}\n                    sender={strings.list}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/scroll_with_eyes.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class StartingBuildScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.starting_build__title}\n                subtitle={strings.starting_build__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.starting_build__computer}\n                    sender={strings.computer} />\n\n                <OutcomingTextMessage\n                    text={strings.starting_build__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/scroll_with_eyes.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class TurnOffLightScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.turn_off_light__title}\n                subtitle={strings.turn_off_light__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.turn_off_light__light}\n                    sender={strings.light} />\n\n                <OutcomingTextMessage\n                    text={strings.turn_off_light__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/smart_house.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class IFTTTIntegrationScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.ifttt_integration__title}\n                subtitle={strings.ifttt_integration__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.ifttt_integration__smart_tv}\n                    sender={strings.smart_tv} />\n\n                <OutcomingTextMessage\n                    text={strings.ifttt_integration__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/ifttt_integration.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class ShowingPresentationScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.showing_presentation__title}\n                subtitle={strings.showing_presentation__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.showing_presentation__presentation}\n                    sender={strings.presentation} />\n\n                <OutcomingTextMessage\n                    text={strings.showing_presentation__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/scroll_with_eyes.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class MonitorTicsScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.monitor_tics__title}\n                subtitle={strings.monitor_tics__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.monitor_tics__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.monitor_tics__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/eye_tics.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class MonitorProductivityScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.monitor_productivity__title}\n                subtitle={strings.monitor_productivity__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.monitor_productivity__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.monitor_productivity__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/monitor_mood.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class MonitorStressScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.monitor_stress__title}\n                subtitle={strings.monitor_stress__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.monitor_stress__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.monitor_stress__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/monitor_mood.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class MonitorMoodScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.monitor_mood__title}\n                subtitle={strings.monitor_mood__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.monitor_mood__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.monitor_mood__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/monitor_mood.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class CountSmilesScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.count_smiles__title}\n                subtitle={strings.count_smiles__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.count_smiles__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.count_smiles__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/count_smilings.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { IncomingTextMessage } from '../messages/TextMessages/IncomingTextMessage';\nimport { Category } from '../Category';\nimport {OutcomingTextMessage} from \"../messages/TextMessages/OutcomingTextMessage\";\nimport {IncomingGifMessage} from \"../messages/GifMessages/IncomingGifMessage\";\n\nexport class CountBitesAndSipsScreen extends Component {\n    render() {\n        return (\n            <Category\n                title={strings.count_bites__title}\n                subtitle={strings.count_bites__subtitle}>\n\n                <IncomingTextMessage\n                    text={strings.count_bites__app}\n                    sender={strings.app} />\n\n                <OutcomingTextMessage\n                    text={strings.count_bites__user}\n                    sender={strings.user}/>\n\n                <IncomingGifMessage\n                    path=\"/images/gifs/monitor_food.gif\"\n                    sender={strings.app}/>\n\n            </Category>\n        )\n    }\n}","import React, { Component} from 'react';\nimport {DirtyHandsScreen} from \"../usecases/DirtyHandsScreen\";\nimport {EyeCureScreen} from \"../usecases/EyeCureScreen\";\nimport {MusicAdminScreen} from \"../usecases/MusicAdminScreen\";\nimport strings from \"../Localisation\";\nimport idGenerator from \"react-id-generator\";\nimport {ButtonLink} from \"../interactive/ButtonLink\";\nimport {BookReaderScreen} from \"../usecases/BookReaderScreen\";\nimport {TakePhotoScreen} from \"../usecases/TakePhotoScreen\";\nimport {SmartGlassesScreen} from \"../usecases/SmartGlassesScreen\";\nimport {StartingBuildScreen} from \"../usecases/StartingBuildScreen\";\nimport {TurnOffLightScreen} from \"../usecases/TurnOffLightScreen\";\nimport {IFTTTIntegrationScreen} from \"../usecases/IFTTTIntegrationScreen\";\nimport {ShowingPresentationScreen} from \"../usecases/ShowingPresentationScreen\";\nimport {MonitorTicsScreen} from \"../usecases/MonitorTicsScreen\";\nimport {MonitorProductivityScreen} from \"../usecases/MonitorProductivityScreen\";\nimport {MonitorStressScreen} from \"../usecases/MonitorStressScreen\";\nimport {MonitorMoodScreen} from \"../usecases/MonitorMoodScreen\";\nimport {CountSmilesScreen} from \"../usecases/CountSmilesScreen\";\nimport {CountBitesAndSipsScreen} from \"../usecases/CountBitesAndSipsScreen\";\n\nexport class UsecasesScrollingScreen extends Component {\n    local_index = 0;\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n        this.count = 16;\n        this.index = 0;\n        this.local_index = 0;\n\n        this.button_id__previous = idGenerator();\n        this.button_id__next = idGenerator();\n    }\n\n    componentDidMount() {\n        let button_previous = document.getElementById(this.button_id__previous);\n        let button_next = document.getElementById(this.button_id__next);\n        let link = this;\n\n        button_previous.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n\n            link.index -= 1;\n            if (link.index < 0) {\n                link.index = link.count + link.index;\n            }\n\n            link.setState({});\n        });\n\n        button_next.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n\n            link.index += 1;\n            link.setState({});\n        });\n    }\n\n    renderingComponent(component, context) {\n        context.index = context.index % context.count;\n        context.local_index = context.local_index % context.count;\n\n        console.log(context.index, context.count, context.local_index);\n\n        const is_current = context.index === context.local_index;\n        context.local_index += 1;\n\n        return is_current? component : <div></div>;\n    }\n\n    returnDefaultSequence() {\n        return (\n            <div>\n                { this.renderingComponent(<DirtyHandsScreen />, this) }\n                { this.renderingComponent(<EyeCureScreen />, this) }\n                { this.renderingComponent(<MonitorProductivityScreen />, this) }\n                { this.renderingComponent(<MonitorStressScreen />, this) }\n                { this.renderingComponent(<MusicAdminScreen />, this) }\n                { this.renderingComponent(<BookReaderScreen />, this) }\n                { this.renderingComponent(<ShowingPresentationScreen />, this) }\n                { this.renderingComponent(<SmartGlassesScreen />, this) }\n                { this.renderingComponent(<IFTTTIntegrationScreen />, this) }\n                { this.renderingComponent(<StartingBuildScreen />, this) }\n                { this.renderingComponent(<TurnOffLightScreen />, this) }\n                { this.renderingComponent(<TakePhotoScreen />, this) }\n                { this.renderingComponent(<MonitorMoodScreen />, this) }\n                { this.renderingComponent(<MonitorTicsScreen />, this) }\n                { this.renderingComponent(<CountSmilesScreen />, this) }\n                { this.renderingComponent(<CountBitesAndSipsScreen />, this) }\n            </div>\n        )\n    }\n\n    returnHealthSequence() {\n        return (\n            <div>\n                { this.renderingComponent(<EyeCureScreen />, this) }\n                { this.renderingComponent(<MonitorProductivityScreen />, this) }\n                { this.renderingComponent(<MonitorStressScreen />, this) }\n                { this.renderingComponent(<MonitorMoodScreen />, this) }\n                { this.renderingComponent(<MonitorTicsScreen />, this) }\n                { this.renderingComponent(<CountSmilesScreen />, this) }\n                { this.renderingComponent(<CountBitesAndSipsScreen />, this) }\n                { this.renderingComponent(<DirtyHandsScreen />, this) }\n                { this.renderingComponent(<MusicAdminScreen />, this) }\n                { this.renderingComponent(<BookReaderScreen />, this) }\n                { this.renderingComponent(<ShowingPresentationScreen />, this) }\n                { this.renderingComponent(<SmartGlassesScreen />, this) }\n                { this.renderingComponent(<IFTTTIntegrationScreen />, this) }\n                { this.renderingComponent(<StartingBuildScreen />, this) }\n                { this.renderingComponent(<TurnOffLightScreen />, this) }\n                { this.renderingComponent(<TakePhotoScreen />, this) }\n            </div>\n        )\n    }\n\n    returnControllingSequence() {\n        return (\n            <div>\n                { this.renderingComponent(<DirtyHandsScreen />, this) }\n                { this.renderingComponent(<MusicAdminScreen />, this) }\n                { this.renderingComponent(<BookReaderScreen />, this) }\n                { this.renderingComponent(<ShowingPresentationScreen />, this) }\n                { this.renderingComponent(<SmartGlassesScreen />, this) }\n                { this.renderingComponent(<IFTTTIntegrationScreen />, this) }\n                { this.renderingComponent(<StartingBuildScreen />, this) }\n                { this.renderingComponent(<TurnOffLightScreen />, this) }\n                { this.renderingComponent(<TakePhotoScreen />, this) }\n                { this.renderingComponent(<MonitorProductivityScreen />, this) }\n                { this.renderingComponent(<MonitorStressScreen />, this) }\n                { this.renderingComponent(<EyeCureScreen />, this) }\n                { this.renderingComponent(<MonitorMoodScreen />, this) }\n                { this.renderingComponent(<MonitorTicsScreen />, this) }\n                { this.renderingComponent(<CountSmilesScreen />, this) }\n                { this.renderingComponent(<CountBitesAndSipsScreen />, this) }\n            </div>\n        )\n    }\n\n    episodesSequence() {\n        let link = window.location.href;\n        let parameters = link.split(\"?\");\n        console.log(parameters);\n\n        if (parameters.length > 1) {\n            parameters = parameters[1].split(\"&\");\n            let type = \"\";\n\n            for (let i = 0; i < parameters.length; i++) {\n                let parameter = parameters[i];\n                let value_array = parameter.split(\"=\");\n\n                if (value_array[0] === 'usecases') {\n                    type = value_array[1];\n                }\n\n                break;\n            }\n\n            console.log(type);\n\n            if (type === 'health') {\n                return this.returnHealthSequence()\n            }\n\n            else if (type === 'controlling') {\n                return this.returnControllingSequence()\n            }\n\n            else {\n                return this.returnDefaultSequence()\n            }\n        }\n\n        else {\n            return this.returnDefaultSequence()\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"usecases\">\n                <ButtonLink\n                    is_previous={true}\n                    id={this.button_id__previous}\n                    text={strings.usecases__prev} />\n\n                { this.episodesSequence() }\n\n                <ButtonLink\n                    is_next={true}\n                    id={this.button_id__next}\n                    text={strings.usecases__next} />\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport strings from '../Localisation';\nimport { Category } from '../Category';\n\nexport class AboutDeviceScreen extends Component {\n    render() {\n        return (\n            <Category\n                category__padding={true}\n                title={strings.about_device}>\n\n                <div className=\"about_device__flex\">\n                    <img className=\"about_device__image\" src=\"images/ear.svg\" />\n\n                    <div className=\"about_device__texts\">\n                        <div className=\"about_device__text about_device__first_text\">\n                            {strings.about_device__first_text}\n                        </div>\n                        <div className=\"about_device__text about_device__second_text\">\n                            {strings.about_device__second_text}\n                        </div>\n                    </div>\n\n                </div>\n\n            </Category>\n        )\n    }\n}","import './App.css';\nimport React, { Component } from 'react';\nimport {ContactsScreen} from \"./components/screens/ContactsScreen\";\nimport {RoadmapScreen} from \"./components/screens/RoadmapScreen\";\nimport {EmailScreen} from \"./components/screens/EmailScreen\";\nimport {HowItWorksScreen} from \"./components/screens/HowItWorksScreen\";\nimport {IntroScreen} from \"./components/screens/IntroScreen\";\nimport {UsecasesScrollingScreen} from \"./components/screens/UsecasesScrollingScreen\";\nimport {AboutDeviceScreen} from \"./components/screens/AboutDeviceScreen\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        let handleStateUpdate  = this.handleStateUpdate.bind(this);\n    }\n\n    handleStateUpdate() {\n        this.setState({});\n    }\n\n    render() {\n        let handleStateUpdate  = this.handleStateUpdate;\n\n        return (\n            <div className=\"app\">\n                <IntroScreen handle={handleStateUpdate.bind(this)}/>\n                <AboutDeviceScreen />\n                <HowItWorksScreen />\n                <UsecasesScrollingScreen />\n                <EmailScreen />\n                <RoadmapScreen />\n                <ContactsScreen />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}